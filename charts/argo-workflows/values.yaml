global:
  {}

argo-workflows:

  ## Custom resource configuration
  crds:
    # -- Keep CRDs on chart uninstall
    keep: false

  workflow:
    serviceAccount:
      # -- Specifies whether a service account should be created
      create: true
    rbac:
      # -- Adds Role and RoleBinding for the above specified service account to be able to run workflows.
      # A Role and Rolebinding pair is also created for each namespace in controller.workflowNamespaces (see below)
      create: true

  controller:







    # -- Specify all namespaces where this workflow controller instance will manage
    # workflows. This controls where the service account and RBAC resources will
    # be created. Only valid when singleNamespace is false.
    workflowNamespaces:
      - argo















    # -- Workflow retention by number of workflows
    retentionPolicy:
      completed: 6
      failed: 2
      errored: 2

    nodeEvents:
      # -- Enable to emit events on node completion.
      ## This can take up a lot of space in k8s (typically etcd) resulting in errors when trying to create new events:
      ## "Unable to create audit event: etcdserver: mvcc: database space exceeded"
      enabled: false






  server:
    # -- Service type for server pods
    serviceType: LoadBalancer








    # -- Run the argo server in "secure" mode. Configure this value instead of `--secure` in extraArgs.
    ## See the following documentation for more details on secure mode:
    ## https://argoproj.github.io/argo-workflows/tls/
    secure: true


    # -- Extra arguments to provide to the Argo server binary, such as for disabling authentication.
    # extraArgs: []
    # If you want to disable authentication for purposes such as:
    #   - local dev-mode without authentication
    #   - gateway authentication through some other service such as KeyCloak
    # uncomment the lines below and comment out the default empty list `extraArgs: []` above:
    extraArgs:
      - --auth-mode=server



















